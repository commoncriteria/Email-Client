<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="..\transforms\pp2html.xsl"?>
<PP xmlns="http://common-criteria.rhcloud.com/ns/cc" name="Email Clients">
  <PPReference title="PP Reference" id="ID003">
    <ReferenceTable>
      <PPTitle>Application Software Extended Package for Email Clients</PPTitle>
      <PPVersion>Draft 1.7</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2015-6-3</PPPubDate>
      <PPCertificationID>unassigned</PPCertificationID>
      <CCVersion>Version 3.1</CCVersion>
      <Keywords>email; email client</Keywords>
      <entry>
        <name>Registration</name>
        <description>National Information Assurance Partnership</description>
      </entry>
    </ReferenceTable>
  </PPReference>
  <RevisionHistory role="draft">
    <entry>
      <version>v 1.0</version>
      <date>2014-04-01</date>
      <subject>Release - Email Client Protection Profile</subject>
    </entry>
    <entry>
      <version>v 1.5 </version>
      <date>2014-12-11</date>
      <subject>Interim Draft - Update as Extended Package of the Protection Profile for Application
        Software</subject>
    </entry>
  </RevisionHistory>
  <chapter title="Introduction" id="int">
    <section title="Overview" id="ppoverview"> The Application Software Extended Package (EP) for
      Email Clients describes the extended security functionality of email clients in terms of <cite
        linkend="bibCC"/>. As an extension of the Protection Profile for Application Software (<cite
        linkend="bibAppPP"/>), this EP specifies additional security functional requirements for an
      email client. In order to determine conformance with the comprehensive set of security
      requirements, the security target (ST) for an email client must include all required
      components in this EP in conjunction with all the required components from the overarching
        (<cite linkend="bibAppPP"/>). Required components include unconditional requirements,
      selection-based requirements in accordance with the selections and/or assignments expressed,
      and may also include optional and/or objective components if desired. </section>
    <section id="glossary" title="Terms">The following sections provide both Common Criteria and
      technology terms used in this Extended Package. <subsection title="Common Criteria Terms"
        id="ccterms">
        <glossary>
          <entry>
            <term><abbr title="Common Criteria">CC</abbr></term>
            <description>Common Criteria for Information Technology Security
              Evaluation.</description>
          </entry>
          <entry>
            <term><abbr title="Extended Package">EP</abbr></term>
            <description>An implementation-independent set of security requirements for a category
              of products, which extends those in a Protection Profile.</description>
          </entry>
          <entry>
            <term><abbr title="Protection Profile">PP</abbr></term>
            <description>An implementation-independent set of security requirements for a category
              of products.</description>
          </entry>
          <entry>
            <term><abbr title="Security Target">ST</abbr></term>
            <description>A set of implementation-dependent security requirements for a specific
              product.</description>
          </entry>
          <entry>
            <term><abbr title="Target of Evaluation">TOE</abbr></term>
            <description>The product under evaluation. In this case, application software and its
              supporting documentation.</description>
          </entry>
          <entry>
            <term><abbr title="TOE Security Functionality">TSF</abbr></term>
            <description>The security functionality of the product under evaluation.</description>
          </entry>
          <entry>
            <term><abbr title="TOE Summary Specification">TSS</abbr></term>
            <description>A description of how a <abbr linkend="TOE"/> satisfies the SFRs in a <abbr
                linkend="ST"/>. </description>
          </entry>
          <entry>
            <term><abbr title="Security Functional Requirement">SFR</abbr></term>
            <description>A requirement for security enforcement by the <abbr linkend="TOE"/>.
            </description>
          </entry>
          <entry>
            <term><abbr title="Security Assurance Requirement">SAR</abbr></term>
            <description>A requirement to assure the security of the <abbr linkend="TOE"/>.
            </description>
          </entry>
        </glossary>
      </subsection>
      <subsection id="techterms" title="Technology Terms">
        <glossary>
          <entry>
            <term>ActiveSync</term>
            <description>Microsoft protocol for synchronizing messaging and calendar data between
              mobile clients and email servers.</description>
          </entry>
          <entry>
            <term>Add-on</term>
            <description>Capabilities or functionality added to an application including plug-ins,
              extensions or other controls.</description>
          </entry>
          <entry>
            <term>Email Client</term>
            <description>Application used to send, receive, access and manage email provided by an
              email server. The terms email client and TOE are interchangeable in this
              document.</description>
          </entry>
          <entry>
            <term>IMAP</term>
            <description>Internet Message Access Protocol - Protocol for an email client to retrieve
              email from an email server over TCP/IP; IMAP4 defined in RFC 3501.</description>
          </entry>
          <entry>
            <term>MAPI</term>
            <description>Messaging Application Programming Interface - open specification used by
              email clients such as Microsoft Outlook and Thunderbird; defined in <cite
                linkend="bibmapispec"/>. </description>
          </entry>
          <entry>
            <term>POP</term>
            <description>Post Office Protocol - Protocol for an email client to retrieve email from
              an email server over TCP/IP; POP3 defined in RFC 1939.</description>
          </entry>
          <entry>
            <term>RPC</term>
            <description>Remote Procedure Call - Protocol used by Microsoft Exchange to send/receive
              MAPI commands; defined in MS-OXCRPC.</description>
          </entry>
          <entry>
            <term>S/MIME</term>
            <description> Secure/Multipurpose Internet Mail Extensions -
              <!-- S/MIME is used to sign and/or encrypt 
              messages at the request of the user upon sending email via the Mail Transfer Agent.
              S/MIME is used by a recipient to verify the digital signature on a signed message upon
              receipt or viewing of the message. Encryption of messages occurs at the request of the
              user upon sending email via the Mail Transfer Agent, and decryption of emails occurs
              upon receipt or viewing of the message. -->
              S/MIME is used to sign and/or encrypt messages at the request of the user upon sending
              email and to verify digital signature on a signed message upon receipt.</description>
          </entry>
          <entry>
            <term>SMTP</term>
            <description>Simple Mail Transfer Protocol - Protocol for an email client to send email
              to an email server over TCP/IP; SMTP defined in RFC 5321.</description>
          </entry>
        </glossary>
      </subsection>
    </section>
    <section title="Compliant Targets of Evaluation" id="TOEdescription"> This document provides an
      extended set of Security Functional Requirements (SFRs) for an email client, which is the
      Target of Evaluation (TOE). The terms email client and TOE are interchangeable in this
      document.<br/> The Protection Profile for Application Software (App PP) defines the baseline
      SFRs for application software which runs on mobile devices ("apps"), as well as on desktop and
      server platforms. This Extended Package (EP) for email clients is not complete in itself, but
      rather extends the Protection Profile for Application Software. <br/> Email clients are user
      applications that provide functionality to send, receive, access and manage email. They are
      also referred to as a Mail User Agent (MUA). The complexity of email content and email clients
      has grown over time. Modern email clients can render HTML as well as plaintext, and may
      include functionality to display common attachment formats, such as Adobe PDF and Microsoft
      Word documents. Some email clients allow their functionality to be modified by users through
      the addition of add-ons. This complex and rich feature set makes email clients a target for
      attackers. Protocols have also been defined for communicating between email clients and
      servers. Some clients support multiple protocols for doing the same task, allowing them to be
      configured according to email server specifications. <figure id="mua_mta"
        src="images/mua_mta.png" max-width="inherit"
        title="Figure 1 - Mail User Agent connecting to a Mail Transfer Agent"/>
    </section>
    <section title="Use Cases" id="usecases">Email clients perform tasks associated primarily with
      the first use case. <usecases>
        <usecase title="Sending, receiving, accessing, managing and displaying email">
          <description>Email clients are used for sending, receiving, viewing, accessing, managing
            email in coordination with a mail server. Email clients can render HTML as well as
            plaintext, and can display common attachment formats. </description>
        </usecase>
        <!-- Added new use case -->
        <usecase title="Encryption and Authentication of Email at Rest">
          <description>Email clients can ensure the privacy and protection of email contents while
            at rest through the use of data at rest encryption.</description>
        </usecase>
      </usecases>
    </section>
  </chapter>
  <chapter title="Conformance Claims" id="conf">
    <cclaims>
      <cclaim id="Conformance Statement">
        <description> The Protection Profile for Application Software (App PP) defines the baseline
          Security Functional Requirements (SFRs) and Security Assurance Requirements (SARs) for
          application software products. This EP serves to extend the App PP baseline with
          additional SFRs and associated Assurance Activities specific to an email client. Assurance
          Activities are the actions that the evaluator performs in order to determine an email
          client's compliance to the SFRs.<br/> This EP conforms to Common Criteria <cite
            linkend="bibCC"/> for Information Technology Security Evaluation, Version 3.1, Revision
          4. It is CC Part 2 extended and CC Part 3 conformant. In order to be conformant to this
          EP, the ST must include all components in this EP and the associated App PP that are:
              <ul><li>unconditional (which are always required)</li>
            <li>selection-based (which are required when certain selections are chosen in the
              unconditional requirements)</li>
          </ul> and may include optional and/or objective components that are desirable but not
          required for conformance. <br/> In accordance with CC Part 1, dependencies are not
          included when they are addressed by other SFRs. The assurance activities provide adequate
          proof that any dependencies are also satisfied. </description>
      </cclaim>
    </cclaims>
  </chapter>
  <chapter title="Security Problem Description" id="spd"> The security problem is described in terms
    of the threats that the email client is expected to address, assumptions about the operational
    environment, and any organizational security policies that it is expected to enforce. <br/> This
    Extended Package does not repeat the threats, assumptions, and organizational security policies
    identified in the App PP, though they all apply given the conformance and hence dependence of
    this EP on it. Together the threats, assumptions and organizational security policies of the App
    PP and those defined in this EP describe those addressed by an email client as the Target of
    Evaluation. <br/> Notably, email clients are particularly at risk from the Network Attack threat
    identified in the App PP. Attackers can send malicious email messages directly to users, and the
    email client will render or otherwise process this untrusted content. <section title="Threats"
      id="threats"> The following threat is specific to email clients, and represents an addition to
      those identified in the App PP. <threats>
        <threat id="T.FLAWED_ADDON">
          <description> Email client functionality can be extended with integration of third-party
            utilities and tools. This expanded set of capabilities is made possible via the use of
            add-ons. The tight integration between the basic email client code and the new
            capabilities that add-ons provide increases the risk that malefactors could inject
            serious flaws into the email client application, either maliciously by an attacker, or
            accidentally by a developer. These flaws enable undesirable behaviors including, but not
            limited to, allowing unauthorized access to sensitive information in the email client,
            unauthorized access to the device's file system, or even privilege escalation that
            enables unauthorized access to other applications or the operating system.
          </description>
        </threat>
      </threats>
    </section>
  </chapter>
  <chapter title="Security Objectives" id="sobj"> This Extended Package adds security objectives to
    those identified in the Protection Profile for Application Software (App PP). <section
      title="Security Objectives for the TOE" id="SecurityObjectivesTOE">
      <SOs>
        <SO id="O.QUALITY">
          <component-refer ref="FDP_NOT_EXT.1"/>
          <component-refer ref="FDP_NOT_EXT.2"/>
          <component-refer ref="FIA_X509_EXT.3"/>
        </SO>
        <SO id="O.MANAGEMENT">
          <component-refer ref="FMT_MOF_EXT.1"/>
        </SO>
        <SO id="O.PROTECTED_STORAGE">
          <component-refer ref="FCS_CKM_EXT.3"/>
          <component-refer ref="FCS_CKM_EXT.4"/>
          <component-refer ref="FCS_COP.2"/>
          <component-refer ref="FCS_IVG_EXT.1"/>
          <component-refer ref="FCS_KYC_EXT.1"/>
          <component-refer ref="FCS_NOG_EXT.1"/>
          <component-refer ref="FCS_SAG_EXT.1"/>
          <component-refer ref="FCS_SMC_EXT.1"/>
        </SO>
        <SO id="O.PROTECTED_COMMS">
          <component-refer ref="FCS_SMIME_EXT.1"/>
          <component-refer ref="FDP_SMIME_EXT.1"/>
          <component-refer ref="FTP_ITC_EXT.1"/>
          <component-refer ref="FIA_SASL_EXT.1"/>
        </SO>
        <SO id="O.ADDON_INTEGRITY">
          <description> To address issues associated with malicious or flawed plug-ins or
            extensions, conformant email clients implement mechanisms to ensure their integrity.
            This includes verification at installation time and update. </description>
          <component-refer ref="fia_x509_ext.3.3"/>
          <component-refer ref="fpt_aon_ext.1"/>
          <component-refer ref="fpt_aon_ext.2"/>
        </SO>
      </SOs>
    </section>
  </chapter>
  <chapter title="Security Requirements" id="req">This chapter describes the security requirements
    which have to be fulfilled by the email client. Those requirements comprise functional
    components from Part 2 of <cite linkend="bibCC"/>. The following notations are used: <ul>
      <li>
        <b>Selection</b> (denoted by <i>italicized text</i>): is used to select one or more options
        provided by the [CC] in stating a requirement.</li>
      <li>
        <b>Assignment</b> operation (denoted by <i>italicized text</i>): is used to assign a
        specific value to an unspecified parameter, such as the length of a password. Showing the
        value in square brackets indicates assignment.</li>
      <li>
        <b>Iteration</b> operation: are identified with a number inside parentheses (e.g.
        "(1)").</li>
    </ul>
    <section title="Security Functional Requirements" id="sfr">The Security Functional Requirements
      included in this section are derived from Part 2 of the Common Criteria for Information
      Technology Security Evaluation, Version 3.1, Revision 4, with additional extended functional
      components. <subsection title="Cryptographic Support (FCS)" id="fcs">
        <f-component id="FCS_SMIME_EXT.1"
          name="Secure/Multipurpose Internet Mail Extensions (S/MIME)">
          <f-element id="FCS_SMIME_EXT.1.1">
            <title>The email client shall implement both a sending and receiving S/MIME v3.2 Agent
              as defined in RFC 5751, using CMS as defined in RFCs 5652, 5754, and 3565. </title>
            <note role="application"> The RFCs allow for an agent to be either sending or receiving,
              or to include both capabilities. The intent of this requirement is to ensure that the
              email client is capable of both sending and receiving S/MIME v3.2 messages. </note>
          </f-element>
          <f-element id="FCS_SMIME_EXT.1.2">
            <title>The email client shall transmit the ContentEncryptionAlgorithmIdentifier for
              AES-128 CBC and AES-256 CBC as part of the S/MIME protocol. </title>
            <note role="application"> AES was added to CMS as defined in RFC 3565.</note>
          </f-element>
          <f-element id="FCS_SMIME_EXT.1.3">
            <title>The email client shall present the digestAlgorithm field with the following
              Message Digest Algorithm identifiers <selectables>
                <selectable>id-sha256</selectable>
                <selectable>id-sha384</selectable>
                <selectable>id-sha512</selectable>
              </selectables> and no others as part of the S/MIME protocol. </title>
          </f-element>
          <f-element id="FCS_SMIME_EXT.1.4">
            <title>The email client shall present the AlgorithmIdentifier field with the following
              sha256withRSAEncryption and <selectables linebreak="yes">
                <selectable>sha384WithRSAEncryption</selectable>
                <selectable>sha512WithRSAEncryption</selectable>
                <selectable>ecdsa-with-SHA256</selectable>
                <selectable>ecdsa-with-sha384</selectable>
                <selectable>ecdsa-with-sha512</selectable>
              </selectables> and no other algorithms as part of the S/MIME protocol. </title>
            <note role="application"> RFC 5751 mandates that receiving and sending agents support
              RSA with SHA256. The algorithms to be tested in the evaluated configuration are
              limited to the algorithms specified in the <linkref linkend="FCS_SMIME_EXT.1.4"/>
              selection. Any other algorithms implemented that do not comply with these requirements
              should not be included in an evaluated email client. </note>
          </f-element>
          <f-element id="FCS_SMIME_EXT.1.5">
            <title>The email client shall support use of different private keys (and associated
              certificates) for signature and for encryption as part of the S/MIME protocol.
            </title></f-element>
          <f-element id="FCS_SMIME_EXT.1.6">
            <title>The email client shall only accept a signature from a certificate with the
              digitalSignature bit set as part of the S/MIME protocol. </title>
            <note role="application"> It is acceptable to assume that the digitalSignature bit is
              set in cases where there is no keyUsage extension. </note>
          </f-element>
          <f-element id="FCS_SMIME_EXT.1.7">
            <title>The email client shall implement mechanisms to retrieve certificates and
              certificate revocation information <selectables><selectable>for each signed/encrypted
                  message sent/received </selectable><selectable>
                  <assignable>frequency</assignable></selectable></selectables> as part of the
              S/MIME protocol. </title>
            <note role="application">In accordance with FIA_X509_EXT.1.1 <cite linkend="bibAppPP"/>,
              certificate revocation may use Certificate Revocation List (CRL) or Online Certificate
              Status Protocol (OCSP). The email client can define how this mechanism behaves,
              including whether it utilizes the underlying OS, but it is required that a mechanism
              exist such that revocation status is supported and so that certificates can be
              retrieved for sending/receiving messages. Frequency is configurable in <linkref
                linkend="FMT_MOF_EXT.1.1"/>. In this requirement frequency can be interpreted as a
              one-time function with local storage, as a regularly scheduled retrieval, or as a
              mechanism that requires manual intervention. If the retrieval mechanism is periodic in
              nature, then the ST author will need to include an iteration of FCS for storage of
              revocation information; storage of certificates is covered in FCS_CKM. The import of
              certificates and certificate chains is not included in this requirement, but is
              covered in FIA_X509 and FMT_MOF. </note>
            <aactivity>
              <!-- Separated TSS and Guidance <tss>The evaluator shall verify that the version of S/MIME implemented by the email
                client is present in the <abbr linkend="TSS"/>. The evaluator shall also verify that
                the algorithms supported are specified, and that the algorithms specified are those
                listed for this component. The evaluator shall also review the Operational Guidance
                to ensure that it contains instructions on configuring the email client such that it
                complies with the description in the <abbr linkend="TSS"/>.<br/> The evaluator shall
                verify that the <abbr linkend="TSS"/> describes the
                ContentEncryptionAlgorithmIdentifier and whether the required behavior is performed
                by default or may be configured. If the <abbr linkend="TSS"/> indicates that the
                algorithms must be configured to meet the requirement, the evaluator shall verify
                that the AGD guidance includes the configuration of this ID.<br/> The evaluator
                shall verify that the <abbr linkend="TSS"/> describes the digestAlgorithm and
                whether the required behavior is performed by default or may be configured. If the
                  <abbr linkend="TSS"/> indicates that the algorithms must be configured to meet the
                requirement, the evaluator shall verify that the AGD guidance includes the
                configuration.<br/> The evaluator shall verify that the <abbr linkend="TSS"/>
                describes the AlgorithmIdentifier and whether the required behavior is performed by
                default or may be configured. If the <abbr linkend="TSS"/> indicates that the
                algorithms must be configured to meet the requirement, the evaluator shall verify
                that the AGD guidance includes the configuration of this ID.<br/> The evaluator
                shall verify that the <abbr linkend="TSS"/> describes the retrieval mechanisms for
                both  certificates  and certificate revocation as well
                as the frequency at which these mechanisms are implemented. If the <abbr
                  linkend="TSS"/> indicates that the mechanisms are configurable, the evaluator
                shall verify that the AGD guidance includes the configuration of these
                mechanisms.</tss> -->
              <tss>The evaluator shall verify that the version of S/MIME implemented by the email
                client is present in the <abbr linkend="TSS"/>. The evaluator shall also verify that
                the algorithms supported are specified, and that the algorithms specified are those
                listed for this component. <br/> The evaluator shall verify that the <abbr
                  linkend="TSS"/> describes the ContentEncryptionAlgorithmIdentifier and whether the
                required behavior is performed by default or may be configured. <br/> The evaluator
                shall verify that the <abbr linkend="TSS"/> describes the digestAlgorithm and
                whether the required behavior is performed by default or may be configured.<br/> The
                evaluator shall verify that the <abbr linkend="TSS"/> describes the
                AlgorithmIdentifier and whether the required behavior is performed by default or may
                be configured. <br/> The evaluator shall verify that the <abbr linkend="TSS"/>
                describes the retrieval mechanisms for both <!-- CRLs and --> certificates
                <!-- add --> and certificate revocation as well as the frequency at which these
                mechanisms are implemented.</tss>
              <guidance>The evaluator shall also review the Operational Guidance to ensure that it
                contains instructions on configuring the email client such that it complies with the
                description in the <abbr linkend="TSS"/>.<br/> If the <abbr linkend="TSS"/>
                indicates that the algorithms in FCS_SMIME_EXT.1.2 must be configured to meet the
                requirement, the evaluator shall verify that the AGD guidance includes the
                configuration of this ID.<br/> If the <abbr linkend="TSS"/> indicates that the
                algorithms in FCS_SMIME_EXT.1.3 must be configured to meet the requirement, the
                evaluator shall verify that the AGD guidance includes the configuration.<br/> If the
                  <abbr linkend="TSS"/> indicates that the algorithms in FCS_SMIME_EXT.1.4 must be
                configured to meet the requirement, the evaluator shall verify that the AGD guidance
                includes the configuration of this ID.<br/> If the <abbr linkend="TSS"/> indicates
                that the mechanisms in FCS_SMIME_EXT.1.7 are configurable, the evaluator shall
                verify that the AGD guidance includes the configuration of these mechanisms. </guidance>
              <tests> The evaluator shall perform the following tests:<br/> These tests can be
                performed in conjunction with the tests defined in FIA_X509 for
                certificate/certificate chain verification and <linkref linkend="FDP_NOT_EXT.1"/>. <testlist>
                  <test>The evaluator shall both send and receive a message with no protection (no
                    signature or encryption) and verify that the message is transmitted properly and
                    can be viewed at the receiving agent. This transmission can be performed as part
                    of a number of mechanisms; it is sufficient to observe that the message arrives
                    at the intended recipient with the same content as when sent.</test>
                  <test>The evaluator shall both send and receive a signed message using each of the
                    algorithms specified in the ST corresponding to the requirement and verify that
                    the signature is valid for both received and sent messages. After verifying the
                    signatures are valid, the evaluator shall send a signed message using each of
                    the algorithms specified in the ST and use a man-in-the-middle tool to modify at
                    least one byte of the message such that the signature is no longer valid. This
                    can be done by modifying the content of the message over which the signature is
                    calculated or by modifying the signature itself. The evaluator shall verify that
                    the received message fails the signature validation check. </test>
                  <test>The evaluator shall both send and receive an encrypted message using each of
                    the algorithms specified in the ST. The evaluator shall verify <!-- Added -->
                    that the contents are encrypted in transit and that the received message decrypts.
                    After verifying the message decrypts, the evaluator shall send an encrypted
                    message using each of the algorithms specified in the ST and use a
                    man-in-the-middle tool to modify at least one byte of the message such that the
                    encryption is no longer valid. The evaluator shall verify that the received
                    message fails to decrypt. </test>
                  <test>The evaluator shall both send and receive a message that is both signed and
                    encrypted. In addition, the evaluator shall use a man-in-the-middle tool to
                    modify at least one byte of the message such that the encryption and signature
                    are no longer valid. The evaluator shall verify that the received message fails
                    to decrypt, fails the signature validation check, and/or both. </test>
                  <test>The evaluator shall send a signed message to the email client using a
                    signature algorithm not supported according to the digestAlgorithm ID (e.g.,
                    SHA1). The evaluator shall verify that the email client provides a notification
                    that the contents cannot be verified because the signature algorithm is not
                    supported. </test>
                  <test>The evaluator shall send an encrypted message to the email client using an
                    encryption algorithm not supported according to the AlgorithmIdentifier field.
                    The evaluator shall verify that the email client does not display/decrypt the
                    contents of the message. </test>
                  <test>The evaluator shall send the email client a message signed by a certificate
                    without the digitalSignature bit set. The evaluator shall verify that the email
                    client notifies the user that the signature is invalid. </test>
                  <test>The evaluator shall send the email client a message signed by a certificate
                    without the Email Protection purpose in the extendedKeyUsage. The evaluator
                    shall verify that the email client notifies the user that the signature is
                    invalid.</test>
                  <test>The evaluator shall verify that the email client uses OCSP or downloads the
                    CRL at the assigned frequency.</test>
                </testlist></tests>
            </aactivity>
          </f-element>
        </f-component>
        <!-- Added for CSFC DAR (FCS_CKM.1(A)) - Renumbered to (b) -->
        <f-component id="FCS_CKM_EXT.1"
          name="Cryptographic Key Derivation (Password/Passphrase Conditioning)">
          <f-element id="FCS_CKM_EXT.1.1" status="optional">
            <!-- Marked as objective but recommend requiring
        for csfc dar -->
            <title>A password/passphrase used to generate a password authorization factor shall
              enable up to <selectables linebreak="yes">
                <selectable><assignable>positive integer of 64 or more</assignable> characters in
                  the set of <selectables linebreak="yes">
                    <selectable>upper case characters</selectable>
                    <selectable>lower case characters</selectable>
                    <selectable>numbers</selectable>
                    <selectable>special characters: !, @, #, $, %, ^, &amp;, *, (, )</selectable>
                    <selectable><assignable>other supported special
                      characters</assignable></selectable>
                  </selectables>
                </selectable>
              </selectables> and shall perform [Password-based Key Derivation Functions] in
              accordance with a specified cryptographic algorithm <selectables linebreak="yes">
                <selectable>HMAC-SHA-256</selectable>
                <selectable>HMAC-SHA-384</selectable>
                <selectable>HMAC-SHA-512</selectable>
              </selectables> with <selectables><selectable><assignable>positive integer of 4096 or
                    more</assignable></selectable></selectables> iterations, and output
              cryptographic key sizes of <selectables linebreak="yes">
                <selectable>128 bits</selectable>
                <selectable>256 bits</selectable>
              </selectables> that meet NIST SP 800-132. </title>
            <note role="application">The password/passphrase is represented on the host machine as a
              sequence of characters whose encoding depends on the email client and the underlying
              OS. This sequence must be conditioned into a string of bits that is to be used as a
              key of equivalent size to the rest of the key chain. The key cryptographic key sizes
              in the fourth selection should be made to correspond to the key sizes selected in
              FCS_CKM_EXT.1. <br/>This password/passphrase must be conditioned into a string of bits
              that forms the submask to be used as input into a key. Conditioning can be performed
              using one of the identified hash functions or the process described in NIST SP
              800-132; the method used is selected by the ST Author. SP 800-132 requires the use of
              a pseudo-random function (PRF) consisting of HMAC with an approved hash function. The
              ST author selects the hash function used, also includes the appropriate requirements
              for HMAC and the hash function. <br/> Appendix A of SP 800-132 recommends setting the
              iteration count in order to increase the computation needed to derive a key from a
              password and, therefore, increase the workload of performing a password recovery
              attack. However, for this EP, a minimum iteration count of 4096 is required in order
              to ensure that twelve bits of security is added to the password/passphrase value. A
              significantly higher value is recommended to ensure optimal security. </note>
            <aactivity>
              <tss>FCS_CKM_1.1(b): There are two aspects of this component that require evaluation:
                passwords/passphrases of the length specified in the requirement (at least 64
                characters) are supported, and that the characters that are input are subject to the
                selected conditioning function. These activities are separately addressed in the
                text below. Support for minimum length: The evaluators shall check the TSS section
                to determine that it specifies that a capability exists to accept
                passwords/passphrases with the minimum number of characters specified in the ST in
                this assignment statement. Support for PBKDF: The evaluator shall examine the
                password hierarchy TSS to ensure that the formation of all keys (as decided in the
                FCS_CKM_EXT.1 selection) is described and that the key sizes match that described by
                the ST author. The evaluator shall check that the TSS describes the method by which
                the password/passphrase is first encoded and then fed to the SHA algorithm. The
                settings for the algorithm (padding, blocking, etc.) shall be described, and the
                evaluator shall verify that these are supported by the selections in this component
                as well as the selections concerning the hash function itself. The evaluator shall
                verify that the TSS contains a description of how the output of the hash function is
                used to form the submask that will be input into the
                function<!-- (commented out bc 
                  it is not in PP/EP) and is the same length
                as the key as specified in FCS_CKM_EXT.4 -->.
                For the NIST SP 800-132-based conditioning of the password/passphrase, the required
                assurance activities will be performed when doing the assurance activities for the
                appropriate requirements (FCS_COP.1.1(4) <cite linkend="bibAppPP"/>). If any
                manipulation of the key is performed in forming the submask that will be used to
                form the key, that process shall be described in the TSS. No explicit testing of the
                formation of the submask from the input password is required. </tss>
              <guidance>Support for minimum length: The evaluators shall also check the Operational
                Guidance to determine that there are instructions for guidance on how to generate
                large passwords/passphrases external to the email client and instructions for how to
                configure the password/passphrase length and optional complexity settings (note to
                Management section). This is important because many default settings for
                passwords/passphrases will not meet the necessary entropy needed as specified in
                this EP. </guidance>
              <tests>Support for minimum length: In addition to the analysis above, the evaluator
                shall also perform the following tests on a email client configured according to the
                AGD_PRE <cite linkend="bibAppPP"/> guidance: <testlist>
                  <test>Ensure that the email client supports passwords/passphrases of 64
                    characters. </test>
                  <test>Try entering a password/passphrase less than 64 characters. </test>
                  <test>If the email client supports a password/passphrase length up to a maximum
                    number of characters, n (which would be greater than 64), then ensure that the
                    email client will not accept more than n characters. </test> Conditioning: No
                  explicit testing of the formation of the authorization factor from the input
                  password/passphrase is required. Iteration count: The evaluator shall verify that
                  the iteration count for PBKDFs performed by the email client comply with NIST SP
                  800-132 by ensuring that the TSS contains a description of the estimated time
                  required to derive key material from passwords and how the email client increases
                  the computation time for password-based key derivation (including but not limited
                  to increasing the iteration count). </testlist></tests>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="FCS_CKM_EXT.3" name="Protection of Key and Key Material">
          <f-element id="FPT_CKM_EXT.3.1">
            <title>The email client shall <selectables linebreak="yes">
                <selectable>not store keys in non-volatile memory</selectable>
                <selectable>only store keys in non-volatile memory when wrapped as specified in
                    <linkref linkend="FCS_COP.2"/> unless the key meets any one of following
                  criteria: <selectables linebreak="yes">
                    <selectable>The plaintext key is not part of the key chain as specified in
                      FCS_KYC_EXT.1.</selectable>
                    <selectable>The plaintext key will no longer provide access to the encrypted
                      data after initial provisioning.</selectable>
                    <selectable>The plaintext key is a key split that is combined as specified in
                        <linkref linkend="FCS_SMC_EXT.1"/>, and the other half of the key split is
                      either <selectables linebreak="yes">
                        <selectable>wrapped as specified in <linkref linkend="FCS_COP.2"
                          /></selectable>
                        <selectable>derived and not stored in non-volatile memory</selectable>
                      </selectables>
                      <selectable linebreak="yes">The plaintext key is stored on an external storage
                        device for use as an authorization factor.</selectable>
                      <selectable linebreak="yes">The plaintext key is used to wrap a key as
                        specified in <linkref linkend="FCS_COP.2"/> that is already wrapped as
                        specified in <linkref linkend="FCS_COP.2"/>.</selectable>
                      <selectable linebreak="yes">The plaintext key is the public portion of the key
                        pair.</selectable>
                    </selectable>
                  </selectables>
                </selectable>
              </selectables>
            </title>
            <note role="application">The plaintext key storage in non-volatile memory is allowed for
              several reasons. If the keys exist within protected memory that is not user accessible
              on the email client or OE, the only methods that allow it to play a security relevant
              role for protecting the FEK
              <!-- there is no FEK rqmt and this term is not defined -->is if it is a key split or
              providing additional layers of wrapping or encryption on keys that have already been
              protected. </note>
            <aactivity><tss>The evaluator shall verify the TSS for a high level description of
                method used to protect keys stored in non-volatile memory.<br/> The evaluator shall
                verify the TSS to ensure it describes the storage location of all keys and the
                protection of all keys stored in non-volatile memory. The description of the key
                chain shall be reviewed to ensure <linkref linkend="FCS_COP.2"/> is followed for the
                storage of wrapped or encrypted keys in non-volatile memory and plaintext keys in
                non-volatile memory meet one of the criteria for storage. </tss>
              <!-- no guidance, no tests -->
            </aactivity>
          </f-element>
        </f-component>
        <!-- Added for CSFC DAR (FCS_CKM.3) Renumbered from .4-->
        <f-component id="FCS_CKM_EXT.4" name="Cryptographic Key Destruction">
          <f-element id="FCS_CKM_EXT.4.1">
            <title>The email client shall <selectables linebreak="yes">
                <selectable>invoke platform-provided key destruction</selectable>
                <selectable>implement key destruction using <selectables linebreak="yes">
                    <selectable>For volatile memory, the erasure shall be executed by a single
                      direct overwrite <selectables linebreak="yes">
                        <selectable>consisting of a pseudo-random pattern using the TSF's
                          RBG</selectable>
                        <selectable>consisting of a pseudo-random pattern using the host platform's
                          RBG</selectable>
                        <selectable>consisting of zeroes</selectable>. </selectables>followed by a
                      read-verify. </selectable></selectables></selectable>
                <selectable>For non-volatile storage, the erasure shall be executed by <selectables
                    linebreak="yes">
                    <selectable>single</selectable>
                    <selectable>three or more times</selectable>
                  </selectables> overwrite of key data storage location consisting of <selectables>
                    <selectable linebreak="yes">a pseudo random pattern using the TSF's RBG (as
                      specified in FCS_RBG_EXT.1</selectable>
                    <selectable>a pseudo-random pattern using the host platform's RBG</selectable>
                    <selectable>a static pattern</selectable>
                  </selectables> followed by a <selectables linebreak="yes">
                    <selectable>read-verify</selectable>
                    <selectable>none</selectable>
                  </selectables>If read-verification of the overwritten data fails, the process
                  shall be repeated again </selectable>
              </selectables>that meets the following: <selectables linebreak="yes">
                <selectable>NIST SP800-88</selectable>
                <selectable>no standard</selectable>
              </selectables> for destroying all plaintext keying material and cryptographic security
              parameters when no longer needed. </title>
            <note role="application">For the purposes of this requirement, plaintext keying material
              refers to authentication data, passwords, symmetric keys, data used to derive keys,
              etc. <br/>The destruction indicated above applies to each intermediate storage area
              for plaintext key/cryptographic critical security parameters (i.e., any storage, such
              as memory buffers, that is included in the path of such data) upon the transfer of the
              key/cryptographic critical security parameter to another memory location. </note>
            <aactivity>
              <tss>If the platform provides the key destruction, then the evaluator shall examine
                the TSS to verify that it describes how the key destruction functionality is
                invoked.<br/> If the application invokes key destruction, the evaluator shall check
                to ensure the TSS describes each of the secret keys (keys used for symmetric
                encryption and/or data authentication), private keys, and CSPs used to generate key;
                when they are zeroized (for example, immediately after use, on system shutdown,
                etc.); and the type of zeroization procedure that is performed (overwrite with
                zeros, overwrite three times with random pattern, etc.). If different types of
                memory are used to store the materials to be protected, the evaluator shall check to
                ensure that the TSS describes the zeroization procedure in terms of the memory in
                which the data are stored (for example, "secret keys stored on flash are zeroized by
                overwriting once with zeros, while secret keys stored on the internal hard drive are
                zeroized by overwriting three times with a random pattern that is changed before
                each write"). </tss>
              <!-- Guidance None -->
              <tests>The following test is only for key destruction provided by the email client:<testlist>
                  <test>For each type of authorization service, encryption mode and encryption
                    operation, a known authorization factor, and chain of keys must be provided to
                    the evaluator with an associated ciphertext data set (e.g. if a passphrase is
                    used to create a intermediate key, then the ciphertext containing the encrypted
                    key as well as the intermediate key itself must be provided to the evaluator.)
                    The evaluator will use the email client in conjunction with a debugging or
                    forensics utility to attempt to authorize themselves, resulting in the
                    generation of a key or decryption of a key. The evaluator will ascertain from
                    the TSS what the vendor defines as "no longer needed" and execute the sequence
                    of actions via the email client to invoke this state. At this point, the
                    evaluator should take a dump of volatile memory and search the retrieved dump
                    for the provided authorization credentials or keys (e.g. if the password was
                    "PaSSw0rd", perform a string search of the forensics dump for "PaSSw0rd"). The
                    evaluator must document each command, program or action taken during this
                    process, and must confirm that no plaintext keying material resides in volatile
                    memory. The evaluator must perform this test three times to ensure
                    repeatability. If during the course of this testing the evaluator finds that
                    keying material remains in volatile memory, they should be able to identify the
                    cause (i.e. execution of the grep command for "PaSSw0rd" caused a false
                    positive) and document the reason for failure to comply with this requirement.
                    The evaluator will repeat this same test, but looking for keying material in
                    non-volatile memory - in some cases, the non-volatile memory testing may be
                    satisfied by other assurance activities (see
                    FCS_CKM_EXT.1<!-- and FPT_FEK_EXT.1 -->). </test>
                </testlist></tests>
            </aactivity>
          </f-element>
        </f-component>
        <!-- Added for CSFC DAR (FCS_COP.1(5)) -->
        <f-component id="FCS_COP_EXT.2" name="Key Wrapping">
          <f-element id="FCS_COP_EXT.2.1" status="sel-based">
            <selection-depends req="fcs_kyc_ext.1.1"/>
            <selection-depends req="fcs_ckm_ext.3.1"/>
            <!-- Renumbered .2 from 1.1(5) -->
            <!-- this would supplement FCS_COP.1.1(1) in
        App PP -->
            <title>The email client shall <selectables linebreak="yes">
                <selectable>use platform-provided functionality to perform Key Wrapping</selectable>
                <selectable>implement functionality to perform Key Wrapping</selectable>
              </selectables> in accordance with a specified cryptographic algorithm <selectables
                linebreak="yes">
                <selectable>AES Key Wrap</selectable>
                <selectable>AES Key Wrap with Padding</selectable>
                <selectable>RSA using the KTS-OAEP-basic scheme</selectable>
                <selectable>RSA using the KTS-OAEP-receiver-confirmation scheme</selectable>
                <selectable>ECC CDH</selectable>
              </selectables> and the cryptographic key size <selectables linebreak="yes">
                <selectable>128 bits (AES)</selectable>
                <selectable>256 bits (AES)</selectable>
                <selectable>2048 (RSA)</selectable>
                <selectable>4096 (RSA)</selectable>
                <selectable>256-bit prime</selectable>
                <selectable>modulus (ECC CDH)</selectable>
                <selectable>384-bit prime modulus (ECC CDH)</selectable>
              </selectables> that meet the following: <selectables linebreak="yes">
                <selectable>"NIST SP 800-38F" for Key Wrap (section 6.2) and Key Wrap with Padding
                  (section 6.3)</selectable>
                <selectable>"NIST SP 800-56B" for RSA using the KTS-OAEP-basic (section 9.2.3) and
                  KTS-OAEP-receiver-confirmation (section 9.2.4) scheme, "NIST SP 800-56A rev 2" for
                  ECC CDH (sections 5.6.1.2 and 6.2.2.2) </selectable>
              </selectables>. </title>
          </f-element>
        </f-component>
        <!-- Added for CSFC DAR (FCS_KYC_EXT.1) -->
        <f-component id="FCS_KYC_EXT.1" name="Key Chaining">
          <f-element id="FCS_KYC_EXT.1.1">
            <title> The email client shall maintain a key chain of: <selectables linebreak="yes">
                <selectable>one</selectable>
                <selectable>a key stored in platform key storage</selectable>
                <selectable>intermediate keys originating from: <selectables linebreak="yes">
                    <selectable>a password as specified in <linkref linkend="FCS_CKM.1.1(b)"
                      /></selectable>
                    <selectable>one or more other authorization factor(s)</selectable>
                    <selectable>credentials stored in platform key storage</selectable>
                  </selectables>
                  <selectable>to the data encryption/decryption key(s) using the following
                    method(s): <selectables linebreak="yes">
                      <selectable>utilization of the platform key storage</selectable>
                      <selectable>utilization of platform key storage that performs key wrap with a
                        TSF provided key</selectable>
                      <selectable>implement key wrapping as specified in <linkref
                          linkend="FCS_COP.2"/></selectable>
                      <selectable>implement key combining as specified in <linkref
                          linkend="FCS_SMC_EXT.1"/></selectable>
                    </selectables>while maintaining an effective strength of <selectables
                      linebreak="yes">
                      <selectable>128 bits</selectable>
                      <selectable>256 bits</selectable>
                    </selectables>
                  </selectable>
                </selectable>
              </selectables>
            </title>
            <note role="application">Key Chaining is the method of using multiple layers of
              encryption keys to ultimately secure the data encryption key. The number of
              intermediate keys will vary. This applies to all keys that contribute to the ultimate
              wrapping or derivation of the data encryption key; including those in protected areas.
              This requirement also describes how keys are stored. </note>
            <aactivity>
              <tss>The evaluator shall verify the TSS* describes a high level description of the key
                hierarchy for all authorizations methods
                <!-- (commented out bc it's not in EP/PP)selected in FIA_AUT_EXT --> that are used
                to protect the encryption keys. The evaluator shall examine the TSS to ensure it
                describes the key chain in detail. The description of the key chain shall be
                reviewed to ensure it maintains a chain of keys using key wrap that meet <linkref
                  linkend="FCS_COP.2"/>. The evaluator shall verify the TSS* to ensure that it
                describes how the key chain process functions, such that it does not expose any
                material that might compromise any key in the chain. A high-level description should
                include a diagram illustrating the key hierarchy implemented and detail where all
                keys and keying material is stored or what it is derived from. The evaluator shall
                examine the key hierarchy to ensure that at no point the chain could be broken
                without a cryptographic exhaust or knowledge of the a key within the chain and the
                effective strength of the data encryption key is maintained throughout the Key
                Chain.<br/> *If necessary, this information could be contained in a proprietary
                document and not appear in the TSS.<br/> If the platform provides the IV generation,
                then the evaluator shall examine the TSS to verify that it describes how the IV
                generation is invoked. <!-- Guidance None, Tests None -->
              </tss>
            </aactivity>
          </f-element>
        </f-component>
        <!-- Added for CSFC DAR (FCS_SMC_EXT.1.1) -->
        <f-component id="FCS_SMC_EXT.1" name="Key Combining">
          <!-- This should probably be included to support key chains, this allows for strong auth and strong TPM implementations. -->
          <f-element id="FCS_SMC_EXT.1.1" status="sel-based">
            <selection-depends req="fcs_kyc_ext.1.1"/>
            <selection-depends req="fcs_ckm_ext.3.1"/>
            <title>The email client shall combine submasks using the following method <selectables
                linebreak="yes">
                <selectable>exclusive OR (XOR)</selectable>
                <selectable>SHA-256</selectable>
                <selectable>SHA-512</selectable>
              </selectables> to generate another key. </title>
            <note role="application">This requirement specifies the way that a product may combine
              the various submasks by using either an XOR or an approved SHA-hash. </note>
            <aactivity>
              <tss>If keys are XORed together to form an intermediate key, the TSS section shall
                identify how this is performed (e.g., if there are ordering requirements, checks
                performed, etc.). The evaluator shall also confirm that the TSS describes how the
                length of the output produced is at least the same as that of the data encryption
                key. </tss>
              <!-- Guidance and Tests - None -->
            </aactivity>
          </f-element>
        </f-component>
        <!-- Added for CSFC DAR (FCS_SNI_EXT.1.1, 1.2, 1.3) -->
        <!-- Salts, IVs, Nonces - Needs to be altered for modes used in this EP -->
        <f-component id="FCS_SAG_EXT.1" name="Cryptographic Salt Generation">
          <f-element id="FCS_SAG_EXT.1.1" status="optional">
            <title>The email client shall only use salts that are generated by a <selectables
                linebreak="yes">
                <selectable>RNG as specified in FCS_RBG_EXT.1</selectable>
                <selectable>RNG provided by the host platform</selectable>
              </selectables>
            </title>
          </f-element>
        </f-component>
        <f-component id="FCS_NOG_EXT.1" name="Cryptographic Nonce Generation">
          <f-element id="FCS_NOG_EXT.1.1" status="optional">
            <title>The email client shall only use unique nonces with a minimum size of [64]
              bits.</title>
          </f-element>
        </f-component>
        <f-component id="FCS_IVG_EXT.1" name="Initialization Vector Generation">
          <f-element id="FCS_IVG_EXT.1.1">
            <title>The email client shall create IVs in the following manner: <selectables
                linebreak="yes">
                <selectable>CBC: IVs shall be non-repeating</selectable>
                <selectable>CCM: Nonce shall be non-repeating</selectable>
                <selectable>XTS: No IV. Tweak values shall be non-negative integers, assigned
                  consecutively, and starting at an arbitrary non-negative integer</selectable>
                <selectable>GCM: IV shall be non-repeating. The number of invocations of GCM shall
                  not exceed 2^32 for a given secret key.</selectable>
              </selectables></title>
            <note role="application">This requirement covers several important factors: The salt
              must be random, but the nonces only have to be unique. FCS_IVG_EXT.1.1 specifies how
              the IV should be handled for each encryption mode. CBC, XTS, and GCM are allowed for
              AES encryption of the data. AES-CCM is an allowed mode for Key Wrapping.</note>
            <aactivity>
              <tss>The evaluator shall ensure the TSS describes how salts are generated. The
                evaluator shall confirm that the salt is generated using an RBG described in
                FCS_RBG_EXT.1 <cite linkend="bibAppPP"/> or by the Operational Environment. If
                external function is used for this purpose, the TSS should include the specific API
                that is called with inputs. <br/> The evaluator shall ensure the TSS describes how
                nonces are created uniquely and how IVs and tweaks are handled (based on the AES
                mode). The evaluator shall confirm that the nonces are unique and the IVs and tweaks
                meet the stated requirements.
                <br/><!-- If the email client is relying on random bit generation from the
                host platform, the evaluator shall verify the TSS includes the name/manufacturer of
                the external RBG. If different external RBGs are used for different platforms, the
                TSS identifies each one for each platform. <br/>If the email client is relying on
                random from the host platform, the evaluator shall verify the TSS describes the
                function call and parameters used when calling the external DRBG function. Also, the
                TSS includes a short description of the vendor's assumption for the amount of
                entropy seeding the external DRBG. -->
                TIf the email client is relying on random bit generation from the host platform, the
                evaluator shall verify the <linkref linkend="TSS"/> includes the name/manufacturer
                of the external RBG and describes the function call and parameters used when calling
                the external DRBG function. If different external RBGs are used for different
                platforms, the TSS identifies identifies each RBG for each platform. Also, the TSS
                includes a short description of the vendor's assumption for the amount of entropy
                seeding the external DRBG. </tss>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="User Data Protection (FDP)" id="fdp">
        <f-component id="FDP_NOT_EXT.1" name="Notification of S/MIME Status">
          <f-element id="FDP_NOT_EXT.1.1">
            <title>The email client shall display a notification of the S/MIME status of received
              emails upon viewing.</title>
            <note role="application">S/MIME status is whether the email has been signed or encrypted
              and whether the signature verifies and the associated certificate validates.
              <!-- This
              notification satisfies <linkref linkend="FIA_X509_EXT.3.5"/>. -->
              This notification must at least display when the email content is viewed. Many
              implementations also display the S/MIME status of each email when all emails are
              viewed as a list. </note>
            <aactivity><tss>The evaluator shall ensure that the <abbr linkend="TSS"/> describes
                notifications of S/MIME status, including whether S/MIME status is also indicated
                upon viewing a list of emails.</tss><guidance>The evaluator shall verify that the
                AGD guidance provides a description (with appropriate visual figures) of the S/MIME
                status notification(s), including how each of the following are indicated:
                encryption, verified and validated signature, and unverified and unvalidated
                signature.</guidance><tests>The evaluator shall perform the following tests and may
                perform them in conjunction with the tests for <linkref linkend="FCS_SMIME_EXT.1"/>:<br/>
                <testlist>
                  <test>The evaluator shall send the client an unencrypted and unsigned email and
                    verify that no notifications are present upon viewing.</test>
                  <test>The evaluator shall send the client an encrypted email and verify that the
                    encrypted notification is present upon viewing.</test>
                  <test>The evaluator shall send the client a valid signed email and verify that the
                    signed notification is present upon viewing.</test>
                  <test>The evaluator shall send the client an invalid signed email (for example,
                    using a certificate that does not contain the correct email address or a
                    certificate that does not chain to the root store) and verify that the invalid
                    signature notification is present upon viewing.</test>
                </testlist></tests>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="FDP_NOT_EXT.2" name="Notification of URI">
          <f-element id="FDP_NOT_EXT.2.1" status="optional">
            <title>The email client shall display the full Uniform Resource Identifier (URI) of any
              embedded links.</title>
            <note role="application"> Embedded links are HTML URI objects which may have a tag (such
              as a word, phrase, icon, or picture) that obfuscates the URI of the link. The intent
              of this requirement is to de-obfuscate the link. The URI may be displayed as a
              "mouse-over" event or may be rendered next to the tag. </note>
            <aactivity><tss>The evaluator shall verify that the <abbr linkend="TSS"/> includes a
                description of how embedded links are rendered and the method by which the URI of
                the link is displayed.</tss>
              <guidance>The evaluator shall ensure that the AGD guidance includes instructions (with
                any appropriate visual figures) for viewing the URI of an embedded link.</guidance>
              <tests>The evaluator shall perform the following test:<br/>
                <testlist>
                  <test>The evaluator shall send the client an HTML message with an embedded link
                    whose tag is not the URI itself (for example, "click here"). The evaluator shall
                    view the message and, following the instructions in the AGD guidance, verify
                    that the full URI of the embedded link is displayed. </test></testlist></tests>
            </aactivity>
          </f-element>
        </f-component>
        <!--
         Added for CSFC DAR (FDP_PRT)
        <f-component id="FDP_PRT_EXT.1" name="Protection of Selected User Data">
          <f-element id="FDP_PRT_EXT.1.2" status="objective">
            <title>The email client shall <selectables linebreak="yes">
                <selectable>invoke platform-provided functionality</selectable>
                <selectable>implement functionality</selectable>
              </selectables> to ensure that all sensitive data created by the email client when
              decrypting/encrypting the user-selected email (or set of files) are destroyed in
              non-volatile memory upon completion of the decryption/encryption
              operation. </title>
            <note role="application"> The intent is that the email client controls the use and
              clearing of any emails that it manipulates. 
			  This next sentence is incomplete and exists in the original text
            provided. 
              However, it is possible that the email
              client shall only be invoking the
              <br/> The email client is not responsible for temporary files that an editor
              application creates. <br/>The email client has "completed the decryption/encryption
              operation" after it has decrypted the file (or set of files) and any edited data has
              been stored encrypted and the plaintext editor has been closed. </note>
            <aactivity><tss>Requirement met by the platform: If the platform provides the key
                encryption/decryption, then the evaluator shall examine the TSS to verify that it
                describes how the key encryption/decryption is invoked. <br/>Requirement met by the
                email client: The evaluator shall examine the TSS to ensure there is a high-level
                description of how the data encryption key is protected. <br/>The evaluator shall
                examine the TSS to ensure that it describes all temporary files/resources created or
                memory used during the decryption/encryption process. The TSS shall describe how the
                email client platform deletes the non-volatile memory (for example, files) and
                volatile memory locations after the TSF is done with its decryption/encryption
                operation. </tss>
              <tests>The following test is only for email client provided
                    functionality:<testlist><test> For each type of encryption mode and encryption
                    operation, a known plaintext file, ciphertext file and the associated keying
                    material must be supplied to the evaluator. The evaluator will use the email
                    client in conjunction with a debugging or forensics utility to attempt to
                    encrypt the plaintext and decrypt the ciphertext. The evaluator will ascertain
                    from the TSS what the vendor defines as "no longer needed" for plaintext
                    information and execute the sequence of actions via the email client to invoke
                    this state. At this point, the evaluator should take a dump of volatile memory
                    and search the retrieved dump for any plaintext information. The evaluator must
                    document each command, program or action taken during this process, and must
                    confirm that no sensitive data resides in volatile memory. The evaluator must
                    perform this test three times to ensure repeatability. If during the course of
                    this testing the evaluator finds that plaintext material remains in volatile
                    memory, they should be able to identify the cause and document the reason for
                    failure to comply with this requirement. The evaluator will repeat this same
                    test, but looking for sensitive data in non-volatile memory.
                </test></testlist></tests></aactivity>
          </f-element>
        </f-component> -->
        <f-component id="FDP_PST_EXT.1" name="Storage of Persistent Information">
          <f-element id="FDP_PST_EXT.1.1" status="optional">
            <title>The email client shall be capable of operating without storing persistent
              information to the client platform with the following exceptions:
                  <selectables><selectable>credentials</selectable><selectable>configuration
                  information</selectable><selectable>certificate
                  revocation</selectable><selectable>no
              exceptions</selectable></selectables>.</title>
            <note role="application">Any data that persists after the email client closes, including
              temporary files, is considered to be persistent data. Satisfying this requirement
              would require the use of a protocol such as IMAP or MAPI. It is not compatible with
              POP. </note>
            <aactivity><tss>The evaluator shall examine the <abbr linkend="TSS"/> to determine that
                it describes all persistent information stored on the platform, and the locations on
                the platform where these data are stored. The evaluator shall confirm that the
                persistent data described is limited to the data identified in the
                selection.</tss><tests>The evaluator shall perform the following
                    tests:<testlist><test>The evaluator shall operate the email client so that
                    several messages, signed, encrypted, and unsigned, are processed. The evaluator
                    shall also exercise functionality such as moving messages to folders, writing
                    unsent drafts of messages, etc., as provided by the client. The evaluator shall
                    then examine the client platform to determine that the only persistent
                    information stored is that identified in the <abbr linkend="TSS"
                  />.</test></testlist></tests>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="FDP_REN_EXT.1" name="Rendering of Message Content">
          <f-element id="FDP_REN_EXT.1.1" status="optional">
            <title>The email client shall have a plaintext-only mode which disables the rendering
              and execution of <selectables linebreak="yes">
                <selectable>HTML</selectable>
                <selectable>JavaScript</selectable>
                <selectable><assignable>other embedded content types</assignable></selectable>
                <selectable>no embedded content types</selectable>
              </selectables>. </title>
            <note role="application">Plaintext only mode prevents the automatic
              <!-- downloading of
              images and rendering and execution of embedded objects -->
              downloading, rendering and execution of images, external resources and embedded
              objects such as HTML or JavaScript objects. <linkref linkend="FMT_MOF_EXT.1.1"/>
              addresses configuration of this mode. The ST author must identify all content types
              supported by the email client through selections and/or assignments. If the email
              client only supports plaintext only mode, no embedded content types should be
              selected.</note>
            <aactivity><tss>The evaluator shall ensure that the <abbr linkend="TSS"/> describes
                plaintext only mode for sending and receiving messages. The evaluator shall verify
                that the <abbr linkend="TSS"/> describes whether the email client is capable of
                rendering and executing HTML or JavaScript. If the email client can render or
                execute HTML or JavaScript, this description must indicate how the email client
                handles received messages that contain HTML or JavaScript while in plaintext only
                mode, and the evaluator shall ensure that the description indicates that embedded
                objects of these types are not rendered or executed and images/external resources
                are not automatically downloaded.</tss><guidance>The evaluator shall examine the AGD
                guidance and verify that it contains instructions for enabling plaintext only
                mode.</guidance><tests>The evaluator shall perform the following tests: <testlist>
                  <test> If HTML is selected in FDP_REN_EXT.1.1, the evaluator shall send a message
                    to the client containing HTML embedded objects and shall verify that the HTML
                    renders. The evaluator shall then enable plaintext only mode and verify that the
                    HTML does not render.</test>
                  <test>If JavaScript is selected in FDP_REN_EXT.1.1, the evaluator shall send a
                    message to the client containing JavaScript embedded objects and shall verify
                    that the JavaScript renders and executes. The evaluator shall then enable
                    plaintext only mode and verify that the JavaScript does not render or
                    execute.</test>
                </testlist></tests>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="FDP_SMIME_EXT.1" name="S/MIME">
          <f-element id="FDP_SMIME_EXT.1.1">
            <title>The email client shall use S/MIME to sign, verify, encrypt, and decrypt
              mail.</title>
            <note role="application"> Note that this requirement does not mandate that S/MIME be
              used for all incoming/outgoing messages, or that the email client automatically
              encrypt and/or sign/verify all sent or received messages. This requirement only
              specifies that the mechanism for digital signature and encryption must be
              S/MIME.</note>
            <aactivity><tss>The evaluator shall verify that the <abbr linkend="TSS"/> contains a
                description of the S/MIME implementation and its use to protect mail from undetected
                modification using digital signatures and unauthorized disclosure using encryption.
                The evaluator shall verify that the <abbr linkend="TSS"/> describes whether
                signature verification and decryption occur at receipt or viewing of the message
                contents, and whether messages are stored with their S/MIME
                envelopes.</tss><guidance>The evaluator shall ensure that the AGD guidance includes
                instructions for configuring a certificate for S/MIME use and instructions for
                signing and encrypting email.</guidance><tests>Tests for this element are performed
                in conjunction with tests for <linkref linkend="FCS_SMIME_EXT.1"/> and <linkref
                  linkend="FDP_NOT_EXT.1"/></tests>
            </aactivity><br/>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Identification and Authentication (FIA)" id="fia">
        <f-component id="FIA_SASL_EXT.1" name="Simple Authentication and Security Layer (SASL)">
          <f-element id="FIA_SASL_EXT.1.1" status="sel-based">
            <selection-depends req="FTP_ITC_EXT.1.2"/>
            <title>The email client shall implement support for Simple Authentication and Security
              Layer (SASL) that complies with RFC 4422. </title>
            <note role="application">SASL is needed if the email implements SMTP to send messages.
              Clients that do not use SMTP (e.g., ActiveSync or MAPI) would not need to implement
              support for SASL.</note>
            <aactivity><tss>The evaluator shall examine the <abbr linkend="TSS"/> to determine that
                it describes the details of the email client/Mail User Agent connecting to a Mail
                Transfer Agent in terms of the SASL connection, along with email client-specific
                options or procedures that might not be reflected in the specification. (Refer to
                Figure 1)</tss>
              <guidance>The evaluator shall confirm that the operational guidance contains
                instructions for establishing the connection to the Mail Transfer Agent. </guidance>
              <tests>The evaluator shall also perform the following test:<br/>
                <testlist>
                  <test>The evaluators shall ensure that the email client is able to initiate
                    communications with a Mail Delivery Agent using POP, IMAP, and any assigned
                    protocols specified in the requirement, setting up the connections as described
                    in the operational guidance and ensuring that communication is
                    successful.</test>
                  <test>The evaluators shall verify that a successful SASL handshake takes place. To
                    perform this test, the evaluator shall use a sniffer and a packet analyzer. The
                    packet analyzer must indicate that the protocol in use is SASL.</test>
                </testlist></tests>
            </aactivity>
          </f-element>
          <f-element id="FIA_SASL_EXT.1.2" status="sel-based">
            <selection-depends req="FTP_ITC_EXT.1.2"/>
            <title>The email client shall support the POP3 CAPA and AUTH extensions for the SASL
              mechanism. </title>
          </f-element>
          <f-element id="FIA_SASL_EXT.1.3" status="sel-based">
            <selection-depends req="FTP_ITC_EXT.1.2"/>
            <title>The email client shall support the IMAP CAPABILITY and AUTHENTICATE extensions
              for the SASL mechanism. </title>
          </f-element>
          <f-element id="FIA_SASL_EXT.1.4" status="sel-based">
            <selection-depends req="FTP_ITC_EXT.1.2"/>
            <title>The email client shall support the SMTP AUTH extension for the SASL mechanism. </title>
            <note role="application"> In order for an email client to support PKI X.509 Certificates
              for POP3, IMAP and SMTP as required in this document, the client must support the
              Simple Authentication and Security Layer (SASL) authentication method as described in
              RFC 4422, the AUTH and CAPA extensions for POP3, as described in RFC 5034, the
              AUTHENTICATION and CAPABILITY extensions for IMAP, as described in RFC 4959 and the
              AUTH extension for SMTP, as described in RFC 4954. </note>
            <aactivity><tss>The evaluator shall examine the <abbr linkend="TSS"/> to determine that
                it describes the details of the email client connecting to a Mail Transfer Agent in
                terms of the SASL connection, along with email client-specific options or procedures
                that might not be reflected in the specification.</tss>
              <guidance>The evaluator shall confirm that the operational guidance contains
                instructions for establishing the connection to the Mail Transfer Agent.</guidance>
              <tests>The evaluator shall also perform the following tests:<br/>
                <testlist>
                  <test>The evaluators shall ensure that the email client is able to initiate
                    communications using POP, IMAP and SMTP and requiring SASL, setting up the
                    connections as described in the operational guidance and ensuring that
                    communication is successful.</test>
                  <test>The evaluator shall ensure, for each communication channel with an
                    authorized IT entity in tests 1, that a valid SASL handshake is performed. To
                    perform this test, the evaluator shall use a sniffer and a packet analyzer. The
                    packet analyzer must indicate that the protocol in use is SASL.</test>
                </testlist></tests>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="FIA_X509_EXT.3" name="X509 Authentication and Encryption">
          <f-element id="FIA_X509_EXT.3.1">
            <title>The email client shall use X.509v3 certificates as defined by RFC 5280 to support
              encryption and authentication for S/MIME. </title>
          </f-element>
          <f-element id="FIA_X509_EXT.3.2">
            <title> The email client shall prevent the establishment of a trusted communication
              channel when the peer certificate is deemed invalid. </title>
            <note role="application"> Trusted communication channels include any of TLS performed by
              the email client. Validity is determined by the certificate path, the expiration date,
              and the revocation status in accordance with RFC 5280. </note>
          </f-element>
          <f-element id="FIA_X509_EXT.3.3">
            <title> The email client shall prevent the installation of code if the code signing
              certificate is deemed invalid. </title>
          </f-element>
          <f-element id="FIA_X509_EXT.3.4">
            <title> The email client shall prevent the encryption of email if the email protection
              certificate is deemed invalid. </title>
          </f-element>
          <!-- Removed old 3.5 because we have FDP_NOT_EXT.1.1 <f-element id="FIA_X509_EXT.3.5">
            <title> The email client shall notify the user if an email is signed with an invalid
              certificate. </title> -->
          <!-- Add new 3.5 -->
          <f-element id="FIA_X509_EXT.3.5">
            <title> The email client shall prevent the signing of email if the email protection
              certificate is deemed invalid. </title>
            <!--</f-element> -->
            <aactivity><!-- <tss>The evaluator shall check the <abbr linkend="TSS"/> to ensure that it
                describes how the email client chooses which certificates to use, and any necessary
                instructions in the administrative guidance for configuring the operating
                environment so that the email client can use the certificates.<br/> The evaluator
                shall examine the <abbr linkend="TSS"/> to confirm that it describes the behavior of
                the email client when a connection cannot be established during the validity check
                of a certificate used in establishing a trusted channel and protecting email. If the
                requirement that the administrator is able to specify the default action, then the
                evaluator shall ensure that the operational guidance contains instructions on how
                this configuration action is performed.</tss> -->
              <tss>The evaluator shall check the <abbr linkend="TSS"/> to ensure that it describes
                how the email client chooses which certificates to use so that the email client can
                use the certificates.<br/> The evaluator shall examine the <abbr linkend="TSS"/> to
                confirm that it describes the behavior of the email client when a connection cannot
                be established during the validity check of a certificate used in establishing a
                trusted channel and protecting email. </tss>
              <guidance>The evaluator shall verify that the administrative guidance contains any
                necessary instructions for configuring the operating environment so that the email
                client can use the certificates.<br/>
              </guidance>
              <tests>The evaluator shall perform Test 1 for each function listed in FIA_X509_EXT.2.1
                  (<cite linkend="bibAppPP"/>) that requires the use of certificates:<br/>
                <testlist>
                  <test>The evaluator shall demonstrate that using a certificate without a valid
                    certification path results in the function
                    failing<!-- or in the receipt of a user
                    notification (as required by elements 2, 3, 4, and 5)-->.
                    The evaluator shall then load into the platform's root store any certificates
                    needed to validate the certificate to be used in the function, and demonstrate
                    that the function succeeds<!-- or results in no user notification-->.</test>
                  <test>The evaluator shall demonstrate that using a valid certificate that requires
                    certificate validation checking to be performed in at least some part by
                    communicating with a non-TOE IT entity. The evaluator shall then manipulate the
                    environment so that the email client is unable to verify the validity of the
                    certificate, and observe that the action selected in FIA_X509_EXT.2.2 (<cite
                      linkend="bibAppPP"/>) is performed. If the selected action is
                    administrator-configurable, then the evaluator shall follow the operational
                    guidance to determine that all supported administrator-configurable options
                    behave in their documented manner.</test>
                </testlist></tests>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Security Management (FMT)" id="fmt">
        <f-component id="FMT_MOF_EXT.1" name="Management of Functions Behavior">
          <f-element id="FMT_MOF_EXT.1.1">
            <title>The email client shall be capable of performing the following management
              functions, controlled by the user or administrator as shown: <ul>
                <li> X: Mandatory</li>
                <li> O: Optional</li>
              </ul>
              <management-function-set>
                <manager>Administrator</manager>
                <manager>User</manager>
                <management-function admin="O">Enable/disable downloading embedded objects globally
                  and by <selectables>
                    <selectable>domain</selectable>
                    <selectable>sender</selectable>
                    <selectable>no other method</selectable>
                  </selectables>
                </management-function>
                <management-function admin="O"> Enable/disable plaintext only mode globally and by <selectables>
                    <selectable>domain</selectable>
                    <selectable>sender</selectable>
                    <selectable>no other method</selectable>
                  </selectables>
                </management-function>
                <management-function admin="O"> Enable/disable rendering and execution of
                  attachments globally and by <selectables>
                    <selectable>domain</selectable>
                    <selectable>sender</selectable>
                    <selectable>no other method</selectable>
                  </selectables>
                </management-function>
                <management-function admin="O"> Enable/disable email notifications </management-function>
                <management-function admin="O"> Configure a certificate repository for encryption </management-function>
                <management-function admin="O"> Configure whether to establish a trusted channel or
                  disallow establishment if the email client cannot establish a connection to
                  determine the validity of a certificate </management-function>
                <management-function admin="O"> Configure message sending/receiving to only use
                  cryptographic algorithms defined in <linkref linkend="FCS_SMIME_EXT.1"/>
                </management-function>
                <management-function admin="O"> Configure CRL retrieval frequency </management-function>
                <management-function admin="O"> Enable/disable support for add-ons </management-function>
                <management-function admin="O"> Change password/passphrase authentication
                  credential</management-function>
                <management-function admin="O"> Disable key recovery
                  functionality</management-function>
                <management-function admin="O"> Configure cryptographic
                  functionality</management-function>
                <management-function admin="O">
                  <assignable>Other management functions</assignable>
                </management-function>
              </management-function-set>
            </title><br/>
            <note application="role"><ul>
                <li>If password or passphrase authorization factors are implemented by the email
                  client, then the appropriate "change" selection must be included. </li>
                <li>If the email client provides configurability of the cryptographic functions (for
                  example, key size)- even if the configuration is the form of parameters that may
                  be passed to cryptographic functionality implement on the email client platform -
                  then "configure cryptographic functionality" will be included, and the specifics
                  of the functionality offered can either be written in this requirement as bullet
                  points, or included in the TSS. </li>
                <li>If the email client does include a key recovery function, the email client must
                  provide the capability for the user to turn this functionality off so that no
                  recovery key is generated and no keys are permitted to be exported. </li>
              </ul>
            </note>
            <note role="application">For these management functions, the term "Administrator" refers
              to the administrator of a non-mobile device or the device owner of a mobile device.
              The Administrator is responsible for management activities, including setting the
              policy that is applied by the enterprise on the email client. The Administrator could
              be acting remotely and could be the MTA administrator acting through a centralized
              management console or dashboard.<br/> The intent of this requirement is to allow the
              Administrator to configure the email client with a policy that may not be over-ridden
              by the user. If the Administrator has not set a policy for a particular function, the
              user may still perform that function. Enforcement of the policy is done by the email
              client itself, or the email client and the email client platform in coordination with
              each other.<br/> Applications used to configure enterprise policy should have their
              own identification and authorization and additional security requirements to ensure
              that the remote administration is trusted.<br/> The function to configure whether to
              establish a trusted channel corresponds to the functionality described in
              FIA_X509_EXT.2.2 (<cite linkend="bibAppPP"/>). The Administrator has the option of
              accepting or rejecting all certificates that cannot be validated, accepting a given
              certificate that cannot be validated, or not accepting a given certificate that cannot
              be validated. Depending on the choice that the Administrator has made in
              FIA_X509_EXT.2.2 (<cite linkend="bibAppPP"/>), the trusted connection will either be
              allowed for all certificates that cannot be validated, disallowed for all certificates
              that cannot be validated, allowed for a given certificate that cannot be validated, or
              disallowed for a given certificate that cannot be validated. <br/> If "other
              management functions" are assigned, a validation authority must be consulted to ensure
              the assurance activities and other functionality requirements that may be needed are
              appropriately specified so that the ST can claim conformance to this EP. </note>
            <aactivity>The assurance activities for this component will be driven by the selections
              made by the ST author. If a capability is not selected in the ST, the noted assurance
              activity does not need to be performed. <tss>The evaluator shall verify that the <abbr
                  linkend="TSS"/> describes those management functions which may only be configured
                by the email client platform administrator and cannot be over-ridden by the user
                when set according to policy. <br/> Change Password: The evaluator shall examine the
                Operational Guidance to ensure that it describes how the password/passphrase-based
                authorization factor is to be changed. <br/>Disable Key Recovery: If the email
                client supports key recovery, this must be stated in the TSS. The TSS shall also
                describe how to disable this functionality. This includes a description of how the
                recovery material is provided to the recovery holder.<br/> Cryptographic
                Configuration: The evaluator shall determine from the TSS for other requirements
                (FCS_*) what portions of the cryptographic functionality are configurable. </tss>
              <guidance>The evaluator shall examine the operational guidance to verify that it
                includes instructions for an email client platform administrator to configure the
                functions listed in <linkref linkend="FMT_MOF_EXT.1.1"/>. <br/>Disable Key Recovery:
                If the email client supports key recovery, the guidance for disabling this
                capability shall be described in the AGD documentation. <br/> Cryptographic
                Configuration: The evaluator shall review the AGD documentation to determine that
                there are instructions for manipulating all of the claimed mechanisms. </guidance>
              <tests>The evaluator shall perform the following tests:<br/>
                <testlist>
                  <test>The evaluator shall verify that functions perform as intended by enabling,
                    disabling, and configuring the functions.</test>
                  <test>The evaluator shall set management functions which are controlled by the
                    (enterprise) administrator and cannot be overridden by the user. The evaluator
                    shall apply these functions to the client, attempt to override each setting as
                    the user, and ensure that the email client does not permit it.</test>
                  <test>Disable Key Recovery: If the email client provides key recovery capability,
                    then the evaluator shall devise a test that ensures that the key recovery
                    capability has been or can be disabled following the guidance provided by the
                    vendor. </test>
                </testlist></tests></aactivity>
          </f-element>
        </f-component>
        <!-- <f-component id="FMT_SMF.1" name="Specification of Management Functions">
          <f-element id="FMT_SMF.1.1" status="objective">
            <title>The email client shall be capable of performing the following management
              functions: <selectables linebreak="yes">
                <selectable>change password/passphrase authentication credential</selectable>
                <selectable>disable key recovery functionality</selectable>
                <selectable>configure password/passphrase complexity setting</selectable>
                <selectable>configure cryptographic functionality</selectable>
              </selectables>
            </title><br />
            <note application="role">The intent of this requirement is to express the management
              capabilities that may be included in the email client. Several common options are
              given: <ul>
                <li>If password or passphrase authorization factors are implemented by the email
                  client, then the appropriate "change" selection must be
                  included. </li>
                <li>If the email client provides for a password/passphrase complexity setting, then
                  "configure password/passphrase complexity setting" will be included, and the
                  specifics of the functionality offered can either be written from the requirement
                  as bullets points, or included in the TSS. </li>
                <li>If the email client provides configurability of the cryptographic functions (for
                  example, key size)—even if the configuration is the form of parameters that may be
                  passed to cryptographic functionality implement on the email client platform -
                  then "configure cryptographic functionality" will be included, and the specifics
                  of the functionality offered can either be written in this requirement as bullet
                  points, or included in the TSS. </li>
                <li>If the email client does include a key recovery function, the email client must
                  provide the capability for the user to turn this functionality off so that no
                  recovery key is generated and no keys are permitted to be exported. </li>
                <li>If "other management functions" are assigned, a validation authority must be
                  consulted to ensure the assurance activities and other functionality requirements
                  that may be needed are appropriately specified so that the ST can claim
                  conformance to this EP. </li> 
              </ul>
            </note>
            <aactivity> The assurance activities for this component will be driven by the selections
              made by the ST author. This section describes assurance activities for all possible
              selections in an ST; it should be understood that if a capability is not selected in
              the ST, the noted assurance activity does not need to be performed. The following
              sections are divided up into "Required Activities" and "Conditional Activities" for
              ease of reference. <tss>TSS Conditional Activities: The evaluator shall examine the
                TSS to ensure that it describes the sequence of activities that take place from an
                implementation perspective when this activity is performed (for example, how it
                determines which resources are associated with a key, the decryption and
                re-encryption process), and ensure that the keys are not exposed during this change.
                <br/>Cryptographic Configuration: None for this requirement. <br/>Disable Key
                Recovery: If the email client supports key recovery, this must be stated in the TSS.
                The TSS shall also describe how to disable this functionality. This includes a
                description of how the recovery material is provided to the recovery holder. The
                guidance for disabling this capability shall be described in the AGD documentation. </tss>
              <guidance> Conditional Activities: The evaluator shall examine the Operational
                Guidance to ensure that it describes how the password/passphrase-based authorization
                factor is to be changed. <br/>Cryptographic Configuration: The evaluator shall
                determine from the TSS for other requirements (FCS_*,
                FDP_PRT_EXT)
                what portions of the cryptographic functionality are configurable. The evaluator
                shall then review the AGD documentation to determine that there are instructions for
                manipulating all of the claimed mechanisms. </guidance>
              <tests><testlist><test> Conditional Activities: The evaluator shall set all length and
                    complexity settings offered by the email client. The evaluator shall then
                    attempt to enter values that violate those settings and ensure they are not
                    accepted. </test><test>Disable Key Recovery: If the email client provides key
                    recovery capability, then the evaluator shall devise a test that ensures that
                    the key recovery capability has been or can be disabled following the guidance
                    provided by the vendor. </test><test> Cryptographic Configuration: Testing for
                    this activity is performed for other components in this
                EP.</test></testlist></tests>
            </aactivity>
          </f-element>
        </f-component> -->
      </subsection>
      <subsection title="Protection of the TSF (FPT)" id="fpt">
        <f-component id="FPT_AON_EXT.1" name="Support for Only Trusted Add-ons">
          <f-element id="FPT_AON_EXT.1.1">
            <title>The email client shall include the capability to load <selectables>
                <selectable>trusted add-ons</selectable>
                <selectable>no add-ons</selectable>
              </selectables>.</title>
            <note role="application"><linkref linkend="FPT_AON_EXT.2"/> depends upon the selection
              made here. If the email client does not include support for installing only trusted
              add-ons, this requirement can be met by demonstrating the ability to disable all
              support for add-ons as specified in <linkref linkend="FMT_MOF_EXT.1"/>. <!-- Added -->
              Cryptographic verification (i.e., trust) of add-ons is tested in <linkref
                linkend="FPT_AON_EXT.2.1"/></note>
            <!-- Added -->
            <aactivity>
              <tss>The evaluator shall verify that the <abbr linkend="TSS"/> describes whether the
                email client is capable of loading trusted add-ons.</tss>
              <guidance>The evaluator shall examine the operational guidance to verify that it
                includes instructions on loading trusted add-on sources.</guidance>
              <tests>The evaluator shall perform the following tests: <testlist><test>The evaluator
                    shall create or obtain an untrusted add-on and attempt to load it. The evaluator
                    shall verify that the unsigned add-on is rejected and cannot be
                  loaded.</test></testlist>
              </tests>
            </aactivity>
          </f-element>
        </f-component>
        <f-component id="FPT_AON_EXT.2" name="Trusted Update for Add-ons">
          <f-element id="FPT_AON_EXT.2.1" status="sel-based">
            <selection-depends req="FPT_AON_EXT.1.1"/>
            <title>The email client shall <selectables>
                <selectable>provide the ability</selectable>
                <selectable>leverage the platform</selectable>
              </selectables> to provide a means to cryptographically verify add-ons using a digital
              signature mechanism and <selectables>
                <selectable>published hash</selectable>
                <selectable>no other functions</selectable>
              </selectables>prior to installation. </title>
            <aactivity>
              <tss>The evaluator shall examine the <abbr linkend="TSS"/> to verify that it states
                that the email client will reject add-ons from untrusted sources. </tss>
              <guidance>The evaluator shall examine the operational guidance to verify that it
                includes instructions on how to configure the email client with trusted add-on
                sources. </guidance>
              <!-- <guidance>If "trusted" is selected in FPT_AON_EXT.1.1, the evaluator shall examine the
                operational guidance to verify that it includes instructions on how to configure the
                email client with trusted add-on sources to include: how an add-on is deemed
                approved; where this information is stored and protected; and how add-ons are
                processed to check that they are coming from an approved source. </guidance>
              The following tests require the developer to provide tools not typically found
                on consumer products. <br/>-->
              <tests>The evaluator shall perform the following tests: <testlist>
                  <!-- <test>If "trusted" is selected in FPT_AON_EXT.1.1, the evaluator shall configure
                    the email client with trusted add-ons. The evaluator shall create or obtain a
                    trusted add-on and attempt to install it. The evaluator shall verify that the
                    signature on the add-on is valid and shall verify that the administrator/user
                    can/cannot install the add-on based on the selection(s) in <linkref
                      linkend="FMT_MOF_EXT.1.1"/>.</test>
                  <test>If "trusted" is selected in FPT_AON_EXT.1.1, the evaluator shall create or
                    obtain an add-on from an untrusted source and attempt to install it. The
                    evaluator shall verify that the untrusted add-on is rejected and cannot be
                    installed.</test>
                  <test>If "signed" is selected in FPT_AON_EXT.1.1, the evaluator shall create or
                    obtain an unsigned add-on and attempt to install it. The evaluator shall verify
                    that the unsigned add-on is rejected and cannot be installed.</test>
                  <test>If "signed" is selected in FPT_AON_EXT.1.1, the evaluator shall create or
                    obtain a signed add-on and attempt to install it. The evaluator shall verify
                    that the signature on the add-on is valid and can be installed.</test> -->
                  <test>The evaluator shall create or obtain an add-on signed by a trusted source
                    and attempt to install it. The evaluator shall verify that the signature on the
                    add-on is valid and that the add-on can be installed.</test>
                  <test>The evaluator shall create or obtain an add-on signed with an invalid
                    certificate and attempt to install it. The evaluator shall verify that the
                    signed add-on is rejected and cannot be installed.</test>
                  <test>The evaluator shall create or obtain an add-on signed by a trusted source,
                    modify the add-on without re-signing it, and attempt to install it. The
                    evaluator shall verify that the signed add-on is rejected and cannot be
                    installed.</test>
                </testlist>
              </tests>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      <subsection title="Trusted Path/Channels (FTP)" id="ftp">
        <f-component id="FTP_ITC_EXT.1" name="Inter-TSF Trusted Channel">
          <f-element id="FTP_ITC_EXT.1.1">
            <title>The email client shall initiate or receive communication via the trusted channel.
            </title>
          </f-element>
          <f-element id="FTP_ITC_EXT.1.2">
            <title>The email client shall communicate via the trusted channel for <selectables
                linebreak="yes">
                <selectable>IMAP</selectable>
                <selectable>SMTP</selectable>
                <selectable>POP</selectable>
                <selectable>MAPI Extensions for HTTP</selectable>
                <selectable>MAPI/RPC</selectable>
                <selectable>ActiveSync</selectable>
                <selectable><assignable>other protocol (reference RFC or
                  specification)</assignable></selectable>
              </selectables>. </title>
            <note role="application"><linkref linkend="FIA_SASL_EXT.1"/> depends upon the
              selection(s) made here. For example, if <i>POP</i> is chosen, then <linkref
                linkend="FIA_SASL_EXT.1.2"/> shall be included in the <abbr linkend="ST"/>.
              Selections must include at least one sending and one receiving protocol. If the
              assignment is used, the ST author must also include a reference for protocol (e.g., an
              RFC number). </note>
            <aactivity><tss>The evaluator shall examine the <abbr linkend="TSS"/> to determine that
                it describes the details of the email client connecting to a Mail Transfer Agent in
                terms of the trusted connection (i.e., TLS) according to FTP_DIT_EXT.1 <cite
                  linkend="bibAppPP"/>, along with email client-specific options or procedures that
                might not be reflected in the specification.</tss>
              <guidance>The evaluator shall confirm that the operational guidance contains
                instructions for establishing the connection to the Mail Transfer Agent.</guidance>
              <tests>The evaluator shall also perform the following tests:<br/>
                <testlist>
                  <test>The evaluators shall ensure that the email client is able to initiate
                    communications using any selected or assigned protocols specified in the
                    requirement over TLS, setting up the connections as described in the operational
                    guidance and ensuring that communication is successful.</test>
                  <test>The evaluators shall ensure that the email client is able to initiate
                    communications with a Mail Transfer Agent using SMTP and any assigned protocols
                    specified in the requirement over TLS, setting up the connections as described
                    in the operational guidance and ensuring that communication is
                    successful.</test>
                  <test>The evaluator shall ensure, for each communication channel with an
                    authorized IT entity in tests 1 and 2, the channel data is not sent in
                    plaintext. To perform this test, the evaluator shall use a sniffer and a packet
                    analyzer. The packet analyzer must indicate that the protocol in use is
                    TLS.</test>
                </testlist></tests>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
    </section>
  </chapter>
  <appendix title="Optional Requirements" id="optional"> The baseline requirements (those that must
    be performed by the <abbr linkend="TOE"/>) are contained in the body of this EP. Additionally,
    there are three other types of requirements specified in <appref linkend="optional"/>, <appref
      linkend="sel-based"/>, and <appref linkend="objective"/>. The first type (in this Appendix)
    are requirements that can be included in the <abbr linkend="ST"/>, but are not required in order
    for an email client to claim conformance to this EP. The second type (in <appref
      linkend="sel-based"/>) are requirements based on selections in the body of the EP: if certain
    selections are made, then additional requirements in that appendix must be included. The third
    type (in <appref linkend="objective"/> are components that are not required in order to conform
    to this EP, but will be included in the baseline requirements in future versions of this EP, so
    adoption by vendors is encouraged. Note that the ST author is responsible for ensuring that
    requirements that may be associated with those in <appref linkend="optional"/>, <appref
      linkend="sel-based"/>, and <appref linkend="objective"/> but are not listed (e.g., FMT-type
    requirements) are also included in the ST. </appendix>
  <appendix title="Selection-Based Requirements" id="sel-based">As indicated in the introduction to
    this EP, the baseline requirements (those that must be performed by the email client or its
    underlying platform) are contained in the App PP and in the body of this EP. There are
    additional requirements based on selections from the App PP and/or in the body of the EP: if
    certain selections are made, then additional requirements below will need to be included. </appendix>
  <appendix title="Objective Requirements" id="objective"> This Annex includes requirements that
    specify security functionality which also addresses threats. The requirements are not currently
    mandated in the body of this EP as they describe security functionality not yet widely-available
    in commercial technology. However, these requirements may be included in the ST such that the
    email client is still conformant to this EP, and it is expected that they be included as soon as
    possible.<br/>None. </appendix>
  <appendix id="biblio" title="References">
    <bibliography>
      <entry id="bibCC">
        <tag>CC</tag>
        <description>Common Criteria for Information Technology Security Evaluation - <ul>
            <li><a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART1V3.1R4.pdf">Part
                1: Introduction and General Model</a>, CCMB-2012-09-001, Version 3.1 Revision 4,
              September 2012.</li>
            <li><a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART2V3.1R4.pdf">Part
                2: Security Functional Components</a>, CCMB-2012-09-002, Version 3.1 Revision 4,
              September 2012.</li>
            <li><a href="http://www.commoncriteriaportal.org/files/ccfiles/CCPART3V3.1R4.pdf">Part
                3: Security Assurance Components</a>, CCMB-2012-09-003, Version 3.1 Revision 4,
              September 2012.</li>
          </ul></description>
      </entry>
      <entry id="bibAppPP">
        <tag>AppPP</tag>
        <description>
          <a href="https://www.niap-ccevs.org/pp/PP_APP_v1.1/">Protection Profile for Application
            Software</a>
        </description>
      </entry>
      <entry id="bibmapispec">
        <tag>MS-OXCMAPIHTTP</tag>
        <description>
          <a href="https://msdn.microsoft.com/en-us/library/dn530952(v=exchg.80).aspx"> Messaging
            Application Programming Interface (MAPI) Extensions for HTTP</a>
        </description>
      </entry>
    </bibliography>
  </appendix>
  <appendix title="Acronyms" id="acronyms">
    <acronyms>
      <entry>
        <term>AES</term>
        <description>Advanced Encryption Standard</description>
      </entry>
      <entry>
        <term>CBC</term>
        <description>Cipher Block Chaining</description>
      </entry>
      <entry>
        <term>CMS</term>
        <description>Cryptographic Message Syntax</description>
      </entry>
      <entry>
        <term>CRL</term>
        <description>Certificate Revocation List</description>
      </entry>
      <!-- Added -->
      <entry>
        <term>DRBG</term>
        <description>Deterministic Random Bit Generator</description>
      </entry>
      <entry>
        <term>ECDSA</term>
        <description>Elliptic Curve Digital Signature Algorithm</description>
      </entry>
      <entry>
        <term>EP</term>
        <description>Extended Package</description>
      </entry>
      <entry>
        <term>FIPS</term>
        <description>Federal Information Processing Standards</description>
      </entry>
      <entry>
        <term>HTML</term>
        <description>HyperText Markup Language</description>
      </entry>
      <entry>
        <term>HTTP</term>
        <description>HyperText Transfer Protocol</description>
      </entry>
      <entry>
        <term>HTTPS</term>
        <description>HyperText Transfer Protocol Secure</description>
      </entry>
      <entry>
        <term>IETF</term>
        <description>Internet Engineering Task Force</description>
      </entry>
      <!-- Added -->
      <entry>
        <term>IV</term>
        <description>Initialization Vector</description>
      </entry>
      <entry>
        <term>MTA</term>
        <description>Mail Transfer Agent</description>
      </entry>
      <entry>
        <term>NIST</term>
        <description>National Institute of Standards and Technology</description>
      </entry>
      <entry>
        <term>PDF</term>
        <description>Portable Document Format</description>
      </entry>
      <!-- Added -->
      <entry>
        <term>RBG</term>
        <description>Random Bit Generator</description>
      </entry>
      <entry>
        <term>RFC</term>
        <description>Request for Comment (IETF)</description>
      </entry>
      <entry>
        <term>RSA</term>
        <description>Rivest Shamir Adelman</description>
      </entry>
      <entry>
        <term>TLS</term>
        <description>Transport Layer Security</description>
      </entry>
    </acronyms>
  </appendix>
</PP>
